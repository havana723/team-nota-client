{
  "author": "havana723",
  "title": "Teamnote Sample",
  "subtitle": "sample teamnote for team-nota",
  "layout": "horizontal-2",
  "header": {
    "leftTop": "solved.ac - havana723",
    "rightTop": "#Page"
  },
  "categories": [
    {
        "title": "Introduction",
        "contents" : [
            {
                "author": "havana723",
                "title": "intro",
                "text": "This it text section. You can use it to add additional explanation, or for reminder",
                "type": "text"
            },
            {
                "author": "havana723",
                "title": "template",
                "explanation": "brief explanation for algorithm",
                "code": "#include <bits/stdc++.h>\n\n#define FastIO ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);\n#define endl '\n'\n#define ends ' '\n#define int long long\n#define FF first\n#define SS second\n#define pii pair<int,int>\n#define tiii tuple<int,int,int>\n#define sz(v) (int)(v).size()\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\n#define compress(v) sort(all(v)), (v).erase(unique(all(v)), (v).end())\n\n//////Constants//////////////////////////////////////////////////////////////////////////\n\nconst int MOD = 1e9 + 7;\nconst int INF = 0x3f3f3f3f;\nconst int LINF = 987654321987654321LL;\n\n//2d graph search////////////////////////////////////////////////////////////////////\n\nconst int dx[] = {-1, 1, 0, 0, 1, 1, -1, -1};\nconst int dy[] = {0, 0, -1, 1, 1, -1, 1, -1};\n\nbool inrange(int i, int j, int n, int m) { return 0 <= i && i < n && 0 <= j && j < m; }\n\nusing namespace std;\n\nint T, n;\n\nint32_t main(void) {\n    FastIO;\n\n#ifdef HN\n    freopen(\"_run/in.txt\", \"r\", stdin), freopen(\"_run/out.txt\", \"w\", stdout);\n#endif\n\n    T = 1;\n    //cin >> T;\n\n    while (T--) {\n    }\n\n    return 0;\n}\n",
                "language": "cpp",
                "type": "algorithm"
            }
        ]
    },
    {
      "title": "Data Structure",
      "contents" : [
          {
              "author": "HYEA",
              "title": "Bottom-up lazy segment tree",
              "explanation": "Usage: Give monoid (S, ·) and morphism F : S → S with f (x · y) = f (x) · f (y)",
              "timeComplexity": "O(n) for constructor, O(log n) for query",
              "code": "template <class S, S (*op)(S, S), S (*e)(),\n\tclass F, S (*mapping)(F, S), F (*composition)(F, F), F (*id)()>\nclass LazySeg {\n\tint N, log;\n\tvector<S> d;\n\tvector<F> lz;\n\n\tvoid pull(int k) { d[k] = op(d[2 * k], d[2 * k + 1]); }\n\tvoid put(int k, F f) {\n\t\td[k] = mapping(f, d[k]);\n\t\tif (k < N) lz[k] = composition(f, lz[k]);\n\t}\n\tvoid push(int k) {\n\t\tput(2 * k, lz[k]);\n\t\tput(2 * k + 1, lz[k]);\n\t\tlz[k] = id();\n\t}\npublic:\n\tLazySeg() : LazySeg(0) {}\n\texplicit LazySeg(int n) : LazySeg(vector<S>(n, e())) {}\n\texplicit LazySeg(const vector<S> &v) {\n\t\tlog = 31 - __builtin_clz(v.size() | 1);\n\t\tN = 1 << log;\n\t\td = vector<S>(2 * N, e());\n\t\tlz = vector<F>(N, id());\n\t\tfor (int i = 0; i < (int)v.size(); i++) d[N + i] = v[i];\n\t\tfor (int i = N - 1; i >= 1; i--) pull(i);\n\t}\n\tvoid set(int p, S x) {\n\t\tp += N;\n\t\tfor (int i = log; i >= 1; i--) push(p >> i);\n\t\td[p] = x;\n\t\tfor (int i = 1; i <= log; i++) pull(p >> i);\n\t}\n\tS prod(int l, int r) {\n\t\tif (l == r) return e();\n\t\tl += N, r += N;\n\t\tfor (int i = log; i >= 1; i--) {\n\t\t\tif (((l >> i) << i) != l) push(l >> i);\n\t\t\tif (((r >> i) << i) != r) push((r - 1) >> i);\n\t\t}\n\t\tS sml = e(), smr = e();\n\t\twhile (l < r) {\n\t\t\tif (l & 1) sml = op(sml, d[l++]);\n\t\t\tif (r & 1) smr = op(d[--r], smr);\n\t\t\tl >>= 1, r >>= 1;\n\t\t}\n\t\treturn op(sml, smr);\n\t}\n\tS all_prod() { return d[1]; }\n\tvoid apply(int l, int r, F f) {\n\t\tif (l == r) return;\n\t\tl += N, r += N;\n\t\tfor (int i = log; i >= 1; i--) {\n\t\t\tif (((l >> i) << i) != l) push(l >> i);\n\t\t\tif (((r >> i) << i) != r) push((r - 1) >> i);\n\t\t}\n\t\tint l2 = l, r2 = r;\n\t\twhile (l < r) {\n\t\t\tif (l & 1) put(l++, f);\n\t\t\tif (r & 1) put(--r, f);\n\t\t\tl >>= 1, r >>= 1;\n\t\t}\n\t\tl = l2, r = r2;\n\t\tfor (int i = 1; i <= log; i++) {\n\t\t\tif (((l >> i) << i) != l) pull(l >> i);\n\t\t\tif (((r >> i) << i) != r) pull((r - 1) >> i);\n\t\t}\n\t}\n};",
              "language": "cpp",
              "type": "algorithm"
          }
      ]
  }
  ]
}
